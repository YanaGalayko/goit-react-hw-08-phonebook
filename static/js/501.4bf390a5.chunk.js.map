{"version":3,"file":"static/js/501.4bf390a5.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.styled.js","redux/contacts/selectors.js","components/ContactFilter/ContactFilter.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactListItms/ContactsListItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/ContactListItms/ContactsListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterText = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  margin-bottom: 10px;\n`;\n\nexport const FilterInputn = styled.input`\n  padding: 6px 6px;\n  border-radius: 8px;\n  border: 2px solid black;\n  background: #F0F8FF;\n  margin-bottom: 30px;\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useDispatch, useSelector } from \"react-redux\";\nimport { FilterText,\n         FilterInputn } from \"./ContactFilter.styled\"\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { filterContacts } from \"redux/contacts/filterSlice\";\n\n\nexport const ContactFilter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \nreturn (\n    <>\n        <FilterText>Find contacts by name</FilterText>\n        <FilterInputn\n        name=\"filter\"\n         type=\"text\"\n         value={filter}\n         onChange={evt => dispatch(filterContacts(evt.target.value))}\n         />\n    </>\n)\n}","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const BookContainer = styled.div`\nmax-width: 400px;\n  border-radius: 10px;\n  border: 2px solid white;\n  background: white;\n  padding: 15px;\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, inset 14px 14px 15px 11px rgba(255,255,255,0);\n`;\n\nexport const FormContact = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 20px;\n  margin-bottom: 30px;\ncolor: rgba(0, 0, 0, 0.6);\nfont-weight: 800;\nfont-size: 1rem;\nline-height: 1.4375em;\n  `;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 500;\n  `;\n\nexport const FormInput = styled(Field)`\n  background: #F0F8FF;\n  border-radius: 8px;\n  border: 2px solid black;\n  padding: 4px 4px;\n  width: 300px;\n  margin-bottom: 6px;\n`;\n\nexport const FormBtn = styled.button`\n   background: #ADD8E6;\n   border-radius: 8px;\n   border: 2px solid black;\n   font-size: 15px;\n   font-weight: 400;\n   padding: 7px 7px;\n\n   &:hover {\n    background: #87CEEB;\n   }\n\n   &:focus {\n    background: #87CEEB;\n   }\n   `;\n\nexport const FormError = styled(ErrorMessage)`\n   color: #DC143C;\n   font-size: 14px;\n   font-weight: 400;\n\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FormContact,\n         FormLabel,\n         FormInput, \n         FormBtn, \n         FormError, \n         BookContainer} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\n\n\nexport const FormSchema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n        \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n    .required('Required'),\n    number: Yup.string()\n    .min(9, 'The 9 symbols required!')\n    .max(13, 'Less than 13 symbols!')\n    .matches(\n        /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n        \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      )\n    .required('Required'),\n  });\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n    return (\n      <BookContainer>\n      <h2>Phonebook</h2>\n              <Formik\n          initialValues={{ name: '', number: '' }}\n          validationSchema={FormSchema}\n          onSubmit={(values, actions) => {\n            const isContactName = contacts.some(\n              contact => contact.name.toLowerCase() === values.name.toLowerCase()\n            );\n            \n            if (isContactName) {\n              toast.error(\n                `${values.name} is already in contacts!`,{\n                  duration: 4000,\n              });\n              return;\n            }\n        \n            const isContactNumber = contacts.some(\n              contact => contact.number === values.number\n            );\n        \n            if (isContactNumber) {\n              toast.error(\n                `${values.number} is already in contacts!`,{\n                  duration: 4000,\n              });\n              return;\n            }\n\n            dispatch(addContact(values));\n            actions.resetForm();\n          }}\n        >\n            <FormContact>\n              <FormLabel>\n                    Name\n                <FormInput type=\"text\" name=\"name\" placeholder=\"Enter name\"/>\n                <FormError name=\"name\" component=\"div\" />\n              </FormLabel>\n              <FormLabel>\n                    Number\n                <FormInput type=\"tel\" name=\"number\" placeholder=\"Enter phone\"/>\n                <FormError name=\"number\" component=\"div\" />\n              </FormLabel>\n              <FormBtn type=\"submit\">\n                Add contact\n              </FormBtn>\n            </FormContact>\n        </Formik>\n      </BookContainer>\n\n    )\n}","import styled from 'styled-components';\n\nexport const ListItems = styled.li`\n  display: flex;\n  gap: 10px;\n  width: 350px;\n`;\n\nexport const ListText = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  width: 350px;\n`;\n\nexport const ListBtn = styled.button`\n   background: white;\n   border-radius: 8px;\n   border: 1px solid transparent;\n   font-size: 14px;\n   font-weight: 400;\n   padding: 5px 5px;\n\n   &:hover {\n    background-color: #709cb3;\n    box-shadow: 0 0 10px #008296, 0 0 20px #00b2b2, 0 0 40px #008296;\n    color: #e6dc55;\n   }\n   `;\n","import { styled } from \"styled-components\";\n\nexport const ModalBox = styled.div`\nwidth: 400px;\nheight: 100%;\npadding: 30px;\nborder: 2px solid black;\nborder-radius: 10px;\n`;\n\nexport const ModalBtn = styled.button`\n  background: #ADD8E6;\n   border-radius: 8px;\n   border: 2px solid black;\n   font-size: 15px;\n   font-weight: 400;\n   padding: 10px;\n   width: 70px;\n\n   &:hover {\n    background: #87CEEB;\n   }\n\n   &:focus {\n    background: #87CEEB;\n   }\n`;\n\nexport const ModalBtnBox = styled.div`\ndisplay: flex;\njustify-content: center;\ngap: 50px;\n\n`;","import Modal from 'react-modal';\nimport { \n    // ErrorMessage, Field, \n    Formik } from \"formik\";\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { FormSchema } from 'components/ContactForm/ContactForm';\nimport { FormContact, FormLabel, FormInput, FormError } from 'components/ContactForm/ContactForm.styled';\nimport { FcOk , FcCancel } from 'react-icons/fc';\nimport { ModalBox, ModalBtn, ModalBtnBox } from './Modal.styled';\n\nModal.setAppElement('#root');\nexport const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '0px',\n  },\n};\n\nexport const ModalWindow = ({ isOpen, contact, onClose }) => {\n    const initialValues = {\n        id: contact.id,\n        name: contact.name,\n        number: contact.number,\n      };\n    \n      const dispatch = useDispatch();\n    \n      const handleSave = (values) => {\n        dispatch(editContact(values));\n        onClose();\n        console.log(values);\n    };\n      return (\n     <>\n     <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        style={customStyles}>\n            <ModalBox>\n            <h2>Edit Contact</h2>\n            <>\n               <Formik\n                initialValues={initialValues}\n                validationSchema={FormSchema}\n                onSubmit={handleSave}\n                >\n               <FormContact>\n              <FormLabel>\n                    Name\n                <FormInput type=\"text\" name=\"name\" placeholder=\"Enter name\"/>\n                <FormError name=\"name\" component=\"div\" />\n              </FormLabel>\n              <FormLabel>\n                    Number\n                <FormInput type=\"tel\" name=\"number\" placeholder=\"Enter phone\"/>\n                <FormError name=\"number\" component=\"div\" />\n              </FormLabel>\n    \n            </FormContact> \n              \n                </Formik>\n            </>\n            \n                <ModalBtnBox>\n               <ModalBtn type=\"submit\"><FcOk size={20}/> save </ModalBtn>\n               <ModalBtn onClick={onClose}><FcCancel size={20}/> cansel</ModalBtn>              \n              </ModalBtnBox>\n            </ModalBox>\n        </Modal>\n     </>\n      );\n    }","import { useDispatch } from \"react-redux\"\nimport { ListItems,\n         ListText,\n         ListBtn } from \"./ContactsListItem.styled\"\nimport { deleteContact } from \"redux/contacts/operations\"\nimport { AiFillDelete } from 'react-icons/ai';\nimport { FaEdit } from 'react-icons/fa';\nimport { useState } from \"react\";\nimport { ModalWindow } from \"components/Modal/Modal\";\n\n\nexport const ContactsListItem = ({contact: { id, name, number },}) => {\n   const dispatch = useDispatch()\n\n   const [modalIsOpen, setModalIsOpen] = useState(false)\n\n   const showModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };;\n\nreturn (\n    <ListItems>\n        <ListText>\n            {name}   :   {number}\n        </ListText>\n        <ListBtn onClick={showModal}>\n            <FaEdit size={18} color={'#464f54'}/>\n            </ListBtn>\n            {modalIsOpen && (\n          <ModalWindow\n            isOpen = {modalIsOpen}\n            contact={{ id, name, number }}\n          onClose={showModal}\n        />\n      )}\n        <ListBtn onClick={() => dispatch(deleteContact(id))}>\n            <AiFillDelete size={18} color={'#464f54'}/>\n            </ListBtn>\n    </ListItems>\n)\n}","import styled from 'styled-components';\n\nexport const ContactListStyle = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;","import { ContactsListItem } from \"components/ContactListItms/ContactsListItem\"\nimport { ContactListStyle } from \"./ContactList.styled\"\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"redux/contacts/selectors\";\n\nexport const ContactList = () => {\n    const filterContacts = useSelector(selectVisibleContacts)\n\n    return (\n        <>\n        {filterContacts.length  ? (\n            <ContactListStyle>\n            {filterContacts.map(contact => (\n                <ContactsListItem\n                    key={contact.id}\n                    contact={contact}\n                />      \n            ))}\n        </ContactListStyle>\n        ) : (\n            <p>Contact list is empty, please add contacts!</p>\n        )}\n        </>\n\n       \n    )\n}","import { styled } from \"styled-components\";\n\nexport const ContactsInfo = styled.main`\ndisplay: flex;\ngap: 100px;\njustify-content: center;\npadding-top: 60px;\n`;\n\nexport const ContactsBox = styled.div`\nmax-width: 400px;\n  border-radius: 10px;\n  border: 2px solid white;\n  background: white;\n  padding: 15px;\n  box-shadow: -10px 0px 13px -7px #000000, 10px 0px 13px -7px #000000, inset 14px 14px 15px 11px rgba(255,255,255,0);\n`;\n","import { ContactFilter } from \"components/ContactFilter/ContactFilter\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport Loader from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from \"redux/contacts/selectors\";\nimport { ContactsInfo,\n    ContactsBox } from \"./Contacts.styled\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoading);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return (\n      <ContactsInfo>\n        <ContactForm />\n        <ContactsBox>\n        <h2>Contacts</h2>\n        <ContactFilter />\n        {isLoading && <Loader/>}\n        <ContactList />\n        </ContactsBox>\n      </ContactsInfo>\n    );\n  }"],"names":["FilterText","styled","_templateObject","_taggedTemplateLiteral","FilterInputn","_templateObject2","selectContacts","state","contacts","selectFilter","filter","selectLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactFilter","dispatch","useDispatch","useSelector","_jsxs","_Fragment","children","_jsx","type","value","onChange","evt","filterContacts","target","BookContainer","FormContact","Form","FormLabel","_templateObject3","FormInput","Field","_templateObject4","FormBtn","_templateObject5","FormError","ErrorMessage","_templateObject6","FormSchema","Yup","shape","min","max","matches","required","number","ContactForm","Formik","initialValues","validationSchema","onSubmit","values","actions","some","toast","concat","duration","addContact","resetForm","placeholder","component","ListItems","ListText","ListBtn","ModalBox","ModalBtn","ModalBtnBox","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","padding","ModalWindow","_ref","isOpen","onClose","id","style","editContact","console","log","FcOk","size","onClick","FcCancel","ContactsListItem","_ref$contact","_useState","useState","_useState2","_slicedToArray","modalIsOpen","setModalIsOpen","showModal","FaEdit","color","deleteContact","AiFillDelete","ContactListStyle","ContactList","length","map","ContactsInfo","ContactsBox","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}